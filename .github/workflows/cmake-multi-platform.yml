name: Build and Release

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Ubuntu Section
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build \
            qt6-base-dev qt6-tools-dev qt6-tools-dev-tools \
            qt6-l10n-tools libgl1-mesa-dev libglu1-mesa-dev rsync
    - name: Configure CMake (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        cmake -B "${{ github.workspace }}/build" \
          -DCMAKE_BUILD_TYPE=Release \
          -G "Ninja" \
          -S "${{ github.workspace }}"
    - name: Build Notepad-- (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: cmake --build "${{ github.workspace }}/build" --config Release
    - name: Package Notepad-- (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        tar -czvf Notepad--.tar.gz -C "${{ github.workspace }}/build" .
        mv Notepad--.tar.gz "${{ github.workspace }}/"

    # macOS Section
    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install ninja qt
    - name: Configure CMake (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        cmake -B "${{ github.workspace }}/build" \
          -DCMAKE_BUILD_TYPE=Release \
          -G "Ninja" \
          -S "${{ github.workspace }}"
    - name: Build Notepad-- (macOS)
      if: matrix.os == 'macos-latest'
      run: cmake --build "${{ github.workspace }}/build" --config Release
    - name: Package Notepad-- (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        zip -r Notepad--.zip "${{ github.workspace }}/build"
        mv Notepad--.zip "${{ github.workspace }}/"

    # Windows Section
    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install ninja -y
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
        choco install mingw -y
      shell: cmd
    - name: Install Qt (Windows)
      if: matrix.os == 'windows-latest'
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.5.3'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_mingw'
    - name: Configure CMake (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cmake -B "${{ github.workspace }}\\build" ^
          -DCMAKE_BUILD_TYPE=Release ^
          -G Ninja ^
          -DCMAKE_PREFIX_PATH=C:\\Qt\\6.5.3\\mingw_64 ^
          -S "${{ github.workspace }}"
      shell: cmd
    - name: Build Notepad-- (Windows)
      if: matrix.os == 'windows-latest'
      run: cmake --build "${{ github.workspace }}\\build" --config Release
      shell: cmd
    - name: Package Notepad-- (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        Compress-Archive -Path "${{ github.workspace }}\\build\\*" -DestinationPath Notepad--.zip
        move Notepad--.zip "${{ github.workspace }}\\"

  # Create and Upload Release
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG="release-$(date +%s)"
        echo "TAG_NAME=${TAG}" >> $GITHUB_ENV
        gh release create "$TAG" -t "Notepad-- Release Build" -n "This is the latest build of Notepad--."

    - name: Upload Ubuntu Artifact
      if: matrix.os == 'ubuntu-latest'
      run: |
        gh release upload ${{ env.TAG_NAME }} "${{ github.workspace }}/Notepad--.tar.gz" --clobber
    - name: Upload macOS Artifact
      if: matrix.os == 'macos-latest'
      run: |
        gh release upload ${{ env.TAG_NAME }} "${{ github.workspace }}/Notepad--.zip" --clobber
    - name: Upload Windows Artifact
      if: matrix.os == 'windows-latest'
      run: |
        gh release upload ${{ env.TAG_NAME }} "${{ github.workspace }}\\Notepad--.zip" --clobber
